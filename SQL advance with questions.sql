--SQL Advance Case Study
select * from DIM_CUSTOMER
select * from DIM_DATE
select * from DIM_LOCATION
select * from DIM_MANUFACTURER
select * from DIM_MODEL
select * from FACT_TRANSACTIONS
--Q1--List all the states in which we have customers who have bought cellphones from 2005 till today.   
SELECT STATE, IDCustomer
FROM FACT_TRANSACTIONS as A
INNER JOIN DIM_LOCATION AS B ON A.IDLOCATION= B.IDLOCATION
INNER JOIN DIM_MODEL C ON A.IDMODEL= C.IDMODEL
WHERE DATE BETWEEN '01-01-2005' AND GETDATE()

--Q1--END

--Q2-- What state in the US is buying the most 'Samsung' cell phones?
SELECT TOP 1 
STATE FROM DIM_LOCATION
INNER JOIN FACT_TRANSACTIONS ON DIM_LOCATION.IDLOCATION=FACT_TRANSACTIONS.IDLOCATION
INNER JOIN DIM_MODEL ON FACT_TRANSACTIONS.IDMODEL = DIM_MODEL.IDMODEL
INNER JOIN DIM_MANUFACTURER ON DIM_MANUFACTURER.IDMANUFACTURER= DIM_MODEL.IDMANUFACTURER
WHERE MANUFACTURER_NAME = 'Samsung'
GROUP BY State
ORDER BY SUM(QUANTITY) DESC

--Q2--END

--Q3-- Show the number of transactions for each model per zip code per state.           
SELECT MODEL_NAME, ZIPCODE, STATE, COUNT(IDCUSTOMER) AS No_OF_Transactions FROM DIM_LOCATION
INNER JOIN FACT_TRANSACTIONS ON DIM_LOCATION.IDLOCATION=FACT_TRANSACTIONS.IDLOCATION
INNER JOIN DIM_MODEL ON FACT_TRANSACTIONS.IDMODEL = DIM_MODEL.IDMODEL
GROUP BY MODEL_NAME, ZIPCODE, State
	
--Q3--END

--Q4--Show the cheapest cellphone (Output should contain the price also) 
SELECT TOP 1
IDMODEL, MODEL_NAME, Unit_price FROM DIM_MODEL
ORDER BY UNIT_PRICE

--Q4--END

--Q5--Find out the average price for each model in the top5 manufacturers in terms of sales quantity and order by average price.   
SELECT MODEL_NAME, AVG(Unit_price) AS Average_Price FROM DIM_MODEL
INNER JOIN DIM_MANUFACTURER ON DIM_MANUFACTURER.IDMANUFACTURER = DIM_MODEL.IDMANUFACTURER
WHERE MANUFACTURER_NAME IN 
(
SELECT TOP 5 MANUFACTURER_NAME FROM FACT_TRANSACTIONS
INNER JOIN DIM_MODEL ON FACT_TRANSACTIONS.IDMODEL = DIM_MODEL.IDMODEL
INNER JOIN DIM_MANUFACTURER ON DIM_MANUFACTURER.IDMANUFACTURER = DIM_MODEL.IDMANUFACTURER
GROUP BY MANUFACTURER_NAME
ORDER BY SUM(QUANTITY)
)
GROUP BY MODEL_NAME
ORDER BY AVG(Unit_price) DESC


--Q5--END

--Q6-- List the names of the customers and the average amount spent in 2009, where the average is higher than 500  
SELECT CUSTOMER_NAME, AVG(TotalPrice) as Average_Spend
FROM DIM_CUSTOMER
INNER JOIN FACT_TRANSACTIONS ON DIM_CUSTOMER.IDCUSTOMER = FACT_TRANSACTIONS.IDCUSTOMER
WHERE YEAR(DATE) = 2009 
GROUP BY Customer_Name
HAVING AVG(TOTALPRICE)>500

--Q6--END
	
--Q7--List if there is any model that was in the top 5 in terms of quantity, simultaneously in 2008, 2009 and 2010   
WITH YearlyTopModels AS 
(
SELECT Model_Name, YEAR(DATE) AS Year, SUM(QUANTITY) AS TotalQuantity, RANK() OVER (PARTITION BY YEAR(DATE) ORDER BY SUM(QUANTITY) DESC) AS Rank
FROM FACT_TRANSACTIONS
inner join DIM_MODEL on DIM_MODEL.IDModel=FACT_TRANSACTIONS.IDModel

GROUP BY Model_Name, YEAR(DATE)
)

SELECT dm.Model_Name FROM YearlyTopModels tm
INNER JOIN DIM_MODEL dm ON tm.Model_Name = dm.Model_Name
WHERE tm.Year IN (2008, 2009, 2010) and Rank <= 5
GROUP BY dm.MODEL_NAME
HAVING 
    COUNT(DISTINCT tm.Year) = 3

	--or

SELECT IDMODEL, MODEL_NAME
FROM (
    SELECT TOP 5 M.IDMODEL, M.MODEL_NAME, 2008 AS SaleYear
    FROM DIM_MODEL M
    INNER JOIN FACT_TRANSACTIONS T ON M.IDMODEL = T.IDMODEL
    WHERE YEAR(T.DATE) = 2008
    GROUP BY M.IDMODEL, M.MODEL_NAME
    ORDER BY SUM(T.QUANTITY) DESC
    
    UNION ALL
    
    SELECT TOP 5 M.IDMODEL, M.MODEL_NAME, 2009 AS SaleYear
    FROM DIM_MODEL M
    INNER JOIN FACT_TRANSACTIONS T ON M.IDMODEL = T.IDMODEL
    WHERE YEAR(T.DATE) = 2009
    GROUP BY M.IDMODEL, M.MODEL_NAME
    ORDER BY SUM(T.QUANTITY) DESC
    
    UNION ALL
    
    SELECT TOP 5 M.IDMODEL, M.MODEL_NAME, 2010 AS SaleYear
    FROM DIM_MODEL M
    INNER JOIN FACT_TRANSACTIONS T ON M.IDMODEL = T.IDMODEL
    WHERE YEAR(T.DATE) = 2010
    GROUP BY M.IDMODEL, M.MODEL_NAME
    ORDER BY SUM(T.QUANTITY) DESC
) Combined
GROUP BY IDMODEL, MODEL_NAME
HAVING COUNT(DISTINCT SaleYear) = 3;
--Q7--END	
--Q8--Show the manufacturer with the 2nd top sales in the year of 2009 and the manufacturer with the 2nd top sales in the year of 2010.   
WITH RankedSales AS (
    SELECT 
        A.MANUFACTURER_NAME,
        YEAR(C.DATE) AS SaleYear,
        SUM(C.TOTALPRICE) AS TotalSales,
        RANK() OVER (PARTITION BY YEAR(C.DATE) ORDER BY SUM(C.TOTALPRICE) DESC) AS SalesRank
    FROM DIM_MANUFACTURER AS A
    INNER JOIN DIM_MODEL AS B ON A.IDMANUFACTURER = B.IDMANUFACTURER
    INNER JOIN FACT_TRANSACTIONS AS C ON B.IDMODEL = C.IDMODEL
    WHERE YEAR(C.DATE) IN (2009, 2010)
    GROUP BY A.MANUFACTURER_NAME, YEAR(C.DATE)
)
SELECT 
    SaleYear,
    MANUFACTURER_NAME,
    TotalSales
FROM RankedSales
WHERE SalesRank = 2;


--Q8--END
--Q9--Show the manufacturers that sold cellphones in 2010 but did not in 2009.   
SELECT MANUFACTURER_NAME FROM DIM_MANUFACTURER as A
INNER JOIN DIM_MODEL as B ON A.IDMANUFACTURER= B.IDMANUFACTURER
INNER JOIN FACT_TRANSACTIONS as C ON B.IDMODEL= C.IDMODEL
WHERE YEAR(DATE) = 2010 
EXCEPT 
SELECT MANUFACTURER_NAME FROM DIM_MANUFACTURER as A
INNER JOIN DIM_MODEL as B ON A.IDMANUFACTURER= B.IDMANUFACTURER
INNER JOIN FACT_TRANSACTIONS as C ON B.IDMODEL= C.IDMODEL
WHERE YEAR(DATE) = 2009



--Q9--END

--Q10--Find top 100 customers and their average spend, average quantity by each year. Also find the percentage of change in their spend.  
WITH TopCustomers AS (
    SELECT TOP 100 IDCustomer FROM FACT_TRANSACTIONS
    GROUP BY IDCustomer
    ORDER BY SUM(TotalPrice) DESC
),
YearlyStats AS (
    SELECT ft.IDCustomer,YEAR(ft.DATE) AS TransactionYear,AVG(ft.TotalPrice) AS AvgSpend,AVG(ft.QUANTITY) AS AvgQuantity,SUM(ft.TotalPrice) AS TotalSpend
    FROM FACT_TRANSACTIONS ft
    WHERE ft.IDCustomer IN (SELECT IDCustomer FROM TopCustomers)
    GROUP BY ft.IDCustomer, YEAR(ft.DATE)
)
SELECT ys.IDCustomer,ys.TransactionYear,ys.AvgSpend,ys.AvgQuantity,ys.TotalSpend,
    CASE WHEN LAG(ys.TotalSpend) OVER (PARTITION BY ys.IDCustomer ORDER BY ys.TransactionYear) IS NULL THEN null
        ELSE ((ys.TotalSpend - LAG(ys.TotalSpend) OVER (PARTITION BY ys.IDCustomer ORDER BY ys.TransactionYear))/ 
             LAG(ys.TotalSpend) OVER (PARTITION BY ys.IDCustomer ORDER BY ys.TransactionYear))*100
    END AS PercentageChangeInSpend
FROM YearlyStats ys
ORDER BY ys.IDCustomer, ys.TransactionYear
--Q10--END
	